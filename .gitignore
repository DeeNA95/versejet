# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Environment variables
.env
.env.local
.env.production
.env.staging

# Log files
*.log
logs/

# Build artifacts
versejet
indexer
dist/
*.o
internal/hnsw/*.o

# Test coverage
coverage.out
coverage.html

# Temporary files
tmp/
temp/

# Docker
.dockerignore

# Application specific
data/*.gob.backup
data/*.gob.tmp

# Runtime files
*.pid
*.seed
*.pid.lock

# Optional npm cache directory (if you add frontend later)
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# Backup files
*.backup
*.bak
*.orig

# Editor backup files
*~
.#*
\#*#
.DS_Store
# Ignore temporary files and directories\nvenv/\nnode_modules/\n*.log
Verse*.json
verse*.json